@isTest
private class MARSInvoiceHelper_Test {
	@isTest
    static void testgenerateInvoice(){
        CFAA__c cfaaParent =  new CFAA__c();
        cfaaParent.Name = 'Test CFAA';
        cfaaParent.Default_Admin_Rate__c = 0.10;
        cfaaParent.Start_Date__c = DateTime.Now().AddDays(-3).date();
        insert cfaaParent;
        List<CFAA_Line_Items__c> childList = new List<CFAA_Line_Items__c>();
        Id prssonel = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Personnel Base Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild = new CFAA_Line_Items__c();
        cfaaChild.CFAA__c = cfaaParent.Id;
        cfaaChild.Personnel_Role__c = 'Firefighter/FF-PMedic';
        cfaaChild.Straight_Time_Rate__c = 27;
        cfaaChild.RecordTypeId = prssonel;
        childList.add(cfaaChild);
        Id apratus = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Emergency Apparatus Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild1 = new CFAA_Line_Items__c();
        cfaaChild1.CFAA__c = cfaaParent.Id;
        cfaaChild1.Emergency_Apparatus_Type__c = 'Type I';
        cfaaChild1.Straight_Time_Rate__c =200;
        cfaaChild1.RecordTypeId = apratus;
        childList.add(cfaaChild1);
        Id equipment = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Support Equipment Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild2 = new CFAA_Line_Items__c();
        cfaaChild2.CFAA__c = cfaaParent.Id;
        cfaaChild2.Support_Equipment_Type__c = 'SUV';
        cfaaChild2.Straight_Time_Rate__c =200;
        cfaaChild2.RecordTypeId = equipment;
        childList.add(cfaaChild2);
        Id Pov = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('POV Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild3 = new CFAA_Line_Items__c();
        cfaaChild3.CFAA__c = cfaaParent.Id;
        cfaaChild3.Straight_Time_Rate__c =0.535;
        cfaaChild3.RecordTypeId = Pov;
        childList.add(cfaaChild3);
        Insert childList;
        Account testAccount = MARS_TestHelper.getAccount(true);
        Agency_Salary_Survey__c salarySurvey = new Agency_Salary_Survey__c();
        salarySurvey.Account__c = testAccount.Id;
        salarySurvey.Actual_Admin_Rate__c = 0.10;
        salarySurvey.Start_Date__c = DateTime.Now().AddDays(-3).date();
        salarySurvey.Status__c = 'Reviewed';
        insert salarySurvey;
        List<Salary_Survey_Line_Items__c> salaItemList = new List<Salary_Survey_Line_Items__c>();
        Salary_Survey_Line_Items__c salaItem = new Salary_Survey_Line_Items__c();
        salaItem.Classification_Title__c = 'Firefighter/FF-PMedic';
        salaItem.Current_Rate__c = 20.50;
        salaItem.Base_Rates__c = 15.00;
        salaItem.Status__c = 'Active';
        salaItem.Agency_Salary_Survey__c = salarySurvey.Id;
        salaItemList.add(salaItem);
        insert salaItemList;
        Agency_Admin_Rates__c adminRate = new Agency_Admin_Rates__c();
        adminRate.Agency__c = testAccount.Id;
        adminRate.Start_Date__c =  DateTime.Now().AddDays(-3).date();
        adminRate.Approval_Status__c = 'Reviewed';
        adminRate.Administrative_Rate_Indirect_Cost_Direct__c =0.10;
        insert adminRate;
        Agency_Non_Suppression_Personnel__c nonSupPer = new Agency_Non_Suppression_Personnel__c();
        nonSupPer.Agency__c = testAccount.Id;
        nonSupPer.Start_Date__c =  DateTime.Now().AddDays(-3).date();
        nonSupPer.Approval_Status__c = 'Reviewed';
        insert nonSupPer;
        Agency_Non_Suppression_Line_Item__c nonSupPerItem = new Agency_Non_Suppression_Line_Item__c();
        nonSupPerItem.Classification_Title__c = 'Test';
        nonSupPerItem.Current_Rate__c = 25.00;
        nonSupPerItem.Status__c = 'Active';
        nonSupPerItem.Agency_Non_Suppression_Personnel__c = nonSupPer.Id;
        insert nonSupPerItem;
        Agency_Special_Equipment__c speEqup = new Agency_Special_Equipment__c();
        speEqup.Agency__c = testAccount.Id;
        speEqup.Start_Date__c =  DateTime.Now().AddDays(-3).date();
        speEqup.Approval_Status__c = 'Reviewed';
        insert speEqup;
        Agency_Special_Equipment_Line_Item__c speEqupItem = new Agency_Special_Equipment_Line_Item__c();
        speEqupItem.FEMA_CODE__c = '8089';
        speEqupItem.Special_Equipment_Type__c = 'Chain Saw';
        speEqupItem.Current_Rate__c = 25.00;
        speEqupItem.Revised_Rate__c = 25.00;
        speEqupItem.Status__c = 'Active';
        speEqupItem.Agency_Special_Equipment__c = speEqup.Id;
        insert speEqupItem;
         
        FEMA_Code__c  femaRecord = new FEMA_Code__c();
        femaRecord.Effective_Date__c  = DateTime.Now().AddDays(-3).date();
        femaRecord.Status__c = 'Active';
        insert femaRecord;
        FEMA_Code_LineItem__c femalineItem = new FEMA_Code_LineItem__c();
        femalineItem.Current_Rate__c = 24.75;
        femalineItem.Name = '8089';
        femalineItem.FEMA_Code__c = femaRecord.Id;
        insert femalineItem;
        F42__c f42Rec = MARS_TestHelper.getF42(false);
        Incident__c incident = MARS_TestHelper.getIncident(true);
        f42Rec.Incident__c = incident.Id;
        f42Rec.Account__c = testAccount.Id;
        insert f42Rec;
        List<F_42_Personnel_Info__c> personnelList = new List<F_42_Personnel_Info__c>();
        F_42_Personnel_Info__c f42Personnel = new F_42_Personnel_Info__c();
        f42Personnel.F_42__c = f42Rec.Id;
        f42Personnel.Start_Date__c = DateTime.Now().AddDays(-3).date();
        f42Personnel.Start_Time__c = '1030';
        f42Personnel.End_Date__c = DateTime.Now().date();
        f42Personnel.End_Time__c = '1645';
        f42Personnel.MACS_ID__c = 'ARC';
        f42Personnel.Rank_Job_Title__c = 'Firefighter/FF-PMedic';
        f42Personnel.SSN__c = '3456';
        personnelList.add(f42Personnel);
        F_42_Personnel_Info__c f42Personnel1 = new F_42_Personnel_Info__c();
        f42Personnel1.F_42__c = f42Rec.Id;
        f42Personnel1.Start_Date__c = DateTime.Now().AddDays(-3).date();
        f42Personnel1.Start_Time__c = '1030';
        f42Personnel1.End_Date__c = DateTime.Now().date();
        f42Personnel1.End_Time__c = '1645';
        f42Personnel1.MACS_ID__c = 'ARC';
        f42Personnel1.Rank_Job_Title__c = 'Test';
        f42Personnel1.SSN__c = '4556';
        personnelList.add(f42Personnel1);
        F_42_Personnel_Info__c f42Personne3 = new F_42_Personnel_Info__c();
        f42Personne3.F_42__c = f42Rec.Id;
        f42Personne3.Start_Date__c = DateTime.Now().AddDays(-3).date();
        f42Personne3.Start_Time__c = '1030';
        f42Personne3.End_Date__c = DateTime.Now().date();
        f42Personne3.End_Time__c = '1645';
        f42Personne3.MACS_ID__c = 'ARC';
        f42Personne3.Rank_Job_Title__c = 'Firefighter/FF-PMedic';
        f42Personne3.SSN__c = '3456';
        personnelList.add(f42Personne3);
        insert personnelList;
        F_42_Actual_Hours__c actualhrs = new F_42_Actual_Hours__c();
        actualhrs.F_42__c = f42Rec.Id;
        actualhrs.Date__c = DateTime.Now().AddDays(-3).date();
        actualhrs.End_Time__c ='1230';
        actualhrs.Start_Time__c = '1000';
        actualhrs.Hours__c = 10.30;
        insert actualhrs;
        F_42_Comment__c comt = new F_42_Comment__c();
        comt.Date__c = DateTime.Now().AddDays(-3).date();
        comt.Comment__c = 'Test';
        comt.Time__c = '1230';
        comt.F_42__c = f42Rec.Id;
        insert comt;
        List<String> f42s = new List<String>();
        f42s.add(f42Rec.Id);
        ContentVersion cv = MARS_TestHelper.getContentVersion();
        //Get Content Documents
        Id conDocId = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:cv.Id].ContentDocumentId;
        //Create ContentDocumentLink 
        ContentDocumentLink cdl = New ContentDocumentLink();
        cdl.LinkedEntityId = f42Rec.Id;
        cdl.ContentDocumentId = conDocId;
        cdl.shareType = 'V';
        Insert cdl;
        Account fundingAcc = new Account();
        fundingAcc.Entity_Type__c = 'MARS Paying Entity';
        fundingAcc.Name = 'BIA';
        fundingAcc.Entity_Id__c = 'Test2005';
        insert fundingAcc;
        Funding_Source__c fc = new Funding_Source__c();
        fc.Account__c = fundingAcc.Id;
        fc.Name = 'BIA';
        fc.Active__c = true;
        fc.Applicable_for_App__c = 'MARS';
        insert fc;
        List<Funding_Rule__c> fundingList = new List<Funding_Rule__c>();
        Funding_Rule__c fundingRule = new Funding_Rule__c();
        fundingRule.Rule_Type__c = 'Percentage Basis';    
        fundingRule.Funding_Source_1__c =fc.Id;
        fundingRule.Funding_Source_1_Percent__c = 10;
        fundingList.add(fundingRule);
        Funding_Rule__c fundingRule1 = new Funding_Rule__c();
        fundingRule1.Rule_Type__c = 'Percentage Basis';    
        fundingRule1.Funding_Source_2__c =fc.Id;
        fundingRule1.Funding_Source_2_Percent__c = 20;
        fundingList.add(fundingRule1);
        Funding_Rule__c fundingRule2 = new Funding_Rule__c();
        fundingRule2.Rule_Type__c = 'Percentage Basis';    
        fundingRule2.Funding_Source_3__c =fc.Id;
        fundingRule2.Funding_Source_3_Percent__c = 20;
        fundingList.add(fundingRule2);
        Funding_Rule__c fundingRule3 = new Funding_Rule__c();
        fundingRule3.Rule_Type__c = 'Percentage Basis';    
        fundingRule3.Funding_Source_4__c =fc.Id;
        fundingRule3.Funding_Source_4_Percent__c = 10;
        fundingList.add(fundingRule3);
        Funding_Rule__c fundingRule4 = new Funding_Rule__c();
        fundingRule4.Rule_Type__c = 'Percentage Basis';    
        fundingRule4.Funding_Source_5__c =fc.Id;
        fundingRule4.Funding_Source_5_Percent__c = 50;
        fundingList.add(fundingRule4);
        insert fundingList;
        List<String> expenseClaims = new List<String>();
		Reimbursement__c remb = new Reimbursement__c();
        remb.Incident__c = incident.Id;
        remb.Account__c = testAccount.Id;
        remb.F_42__c = f42Rec.Id;
        remb.Submission_Date__c = DateTime.Now().AddDays(-3).date();
        remb.Status__c = 'Approved';
        insert remb;
        Reimbursement_Line_Item__c item = new Reimbursement_Line_Item__c();
        item.Lodging__c = 100.00;
        item.Meal__c = 100.00;
        item.MISC__c = 100.00;
        item.Reimbursement__c = remb.Id;
        item.Date__c = DateTime.Now().AddDays(-3).date();
        insert item; 

        test.startTest();//, String fundingRuleId, List<String> expenseClaims
        List<String> result = MARSInvoiceHelper.createInvoiceStaging(incident.Id,testAccount.Id,f42s,fundingRule.Id,null,'Invoice',expenseClaims);
        System.assert(result.size() > 0);
        test.stopTest();
    }
    @isTest
    static void testgenerateInvoiceExpenseClaim(){
        CFAA__c cfaaParent =  new CFAA__c();
        cfaaParent.Name = 'Test CFAA';
        cfaaParent.Default_Admin_Rate__c = 0.10;
        cfaaParent.Start_Date__c = DateTime.Now().AddDays(-3).date();
        insert cfaaParent;
        List<CFAA_Line_Items__c> childList = new List<CFAA_Line_Items__c>();
        Id prssonel = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Personnel Base Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild = new CFAA_Line_Items__c();
        cfaaChild.CFAA__c = cfaaParent.Id;
        cfaaChild.Personnel_Role__c = 'Firefighter/FF-PMedic';
        cfaaChild.Straight_Time_Rate__c = 27;
        cfaaChild.RecordTypeId = prssonel;
        childList.add(cfaaChild);
        Id apratus = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Emergency Apparatus Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild1 = new CFAA_Line_Items__c();
        cfaaChild1.CFAA__c = cfaaParent.Id;
        cfaaChild1.Emergency_Apparatus_Type__c = 'Type I';
        cfaaChild1.Straight_Time_Rate__c =200;
        cfaaChild1.RecordTypeId = apratus;
        childList.add(cfaaChild1);
        Id equipment = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Support Equipment Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild2 = new CFAA_Line_Items__c();
        cfaaChild2.CFAA__c = cfaaParent.Id;
        cfaaChild2.Support_Equipment_Type__c = 'SUV';
        cfaaChild2.Straight_Time_Rate__c =200;
        cfaaChild2.RecordTypeId = equipment;
        childList.add(cfaaChild2);
        Id Pov = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('POV Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild3 = new CFAA_Line_Items__c();
        cfaaChild3.CFAA__c = cfaaParent.Id;
        cfaaChild3.Straight_Time_Rate__c =0.535;
        cfaaChild3.RecordTypeId = Pov;
        childList.add(cfaaChild3);
        Insert childList;
        Account testAccount = MARS_TestHelper.getAccount(true);
        Incident__c incident = MARS_TestHelper.getIncident(true);
        ContentVersion cv = MARS_TestHelper.getContentVersion();
        List<String> expenseClaims = new List<String>();
		Reimbursement__c remb = new Reimbursement__c();
        remb.Incident__c = incident.Id;
        remb.Account__c = testAccount.Id;
        remb.Submission_Date__c = DateTime.Now().AddDays(-3).date();
        remb.Status__c = 'Approved';
        insert remb;
        Reimbursement_Line_Item__c item = new Reimbursement_Line_Item__c();
        item.Lodging__c = 100.00;
        item.Meal__c = 100.00;
        item.MISC__c = 100.00;
        item.Reimbursement__c = remb.Id;
        item.Date__c = DateTime.Now().AddDays(-3).date();
        insert item; 
        expenseClaims.add(remb.Id);
        //Get Content Documents
        Id conDocId = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:cv.Id].ContentDocumentId;
        //Create ContentDocumentLink 
        ContentDocumentLink cdl = New ContentDocumentLink();
        cdl.LinkedEntityId = remb.Id;
        cdl.ContentDocumentId = conDocId;
        cdl.shareType = 'V';
        Insert cdl;
        Account fundingAcc = new Account();
        fundingAcc.Entity_Type__c = 'MARS Paying Entity';
        fundingAcc.Name = 'BIA';
        fundingAcc.Entity_Id__c = 'Test2005';
        insert fundingAcc;
        Funding_Source__c fc = new Funding_Source__c();
        fc.Account__c = fundingAcc.Id;
        fc.Name = 'BIA';
        fc.Active__c = true;
        fc.Applicable_for_App__c = 'MARS';
        insert fc;
        List<Funding_Rule__c> fundingList = new List<Funding_Rule__c>();
        Funding_Rule__c fundingRule = new Funding_Rule__c();
        fundingRule.Rule_Type__c = 'Percentage Basis';    
        fundingRule.Funding_Source_1__c =fc.Id;
        fundingRule.Funding_Source_1_Percent__c = 10;
        fundingList.add(fundingRule);
        Funding_Rule__c fundingRule1 = new Funding_Rule__c();
        fundingRule1.Rule_Type__c = 'Percentage Basis';    
        fundingRule1.Funding_Source_2__c =fc.Id;
        fundingRule1.Funding_Source_2_Percent__c = 20;
        fundingList.add(fundingRule1);
        Funding_Rule__c fundingRule2 = new Funding_Rule__c();
        fundingRule2.Rule_Type__c = 'Percentage Basis';    
        fundingRule2.Funding_Source_3__c =fc.Id;
        fundingRule2.Funding_Source_3_Percent__c = 20;
        fundingList.add(fundingRule2);
        Funding_Rule__c fundingRule3 = new Funding_Rule__c();
        fundingRule3.Rule_Type__c = 'Percentage Basis';    
        fundingRule3.Funding_Source_4__c =fc.Id;
        fundingRule3.Funding_Source_4_Percent__c = 10;
        fundingList.add(fundingRule3);
        Funding_Rule__c fundingRule4 = new Funding_Rule__c();
        fundingRule4.Rule_Type__c = 'Percentage Basis';    
        fundingRule4.Funding_Source_5__c =fc.Id;
        fundingRule4.Funding_Source_5_Percent__c = 50;
        fundingList.add(fundingRule4);
        insert fundingList;
        List<String> f42s = new List<String>();
        test.startTest();//, String fundingRuleId, List<String> expenseClaims
        List<String> result = MARSInvoiceHelper.createInvoiceStaging(incident.Id,testAccount.Id,f42s,fundingRule.Id,null,'Invoice',expenseClaims);
        System.assert(result.size() > 0);
        test.stopTest();
    }
    @isTest
    static void testgenerateInvoiceWithoutAgencyId(){
        CFAA__c cfaaParent =  new CFAA__c();
        cfaaParent.Name = 'Test CFAA';
        cfaaParent.Default_Admin_Rate__c = 0.10;
        cfaaParent.Start_Date__c = DateTime.Now().AddDays(-3).date();
        insert cfaaParent;
        List<CFAA_Line_Items__c> childList = new List<CFAA_Line_Items__c>();
        Id prssonel = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Personnel Base Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild = new CFAA_Line_Items__c();
        cfaaChild.CFAA__c = cfaaParent.Id;
        cfaaChild.Personnel_Role__c = 'Firefighter/FF-PMedic';
        cfaaChild.Straight_Time_Rate__c = 27;
        cfaaChild.RecordTypeId = prssonel;
        childList.add(cfaaChild);
        Id apratus = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Emergency Apparatus Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild1 = new CFAA_Line_Items__c();
        cfaaChild1.CFAA__c = cfaaParent.Id;
        cfaaChild1.Emergency_Apparatus_Type__c = 'Type I';
        cfaaChild1.Straight_Time_Rate__c =200;
        cfaaChild1.RecordTypeId = apratus;
        childList.add(cfaaChild1);
        Id equipment = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('Support Equipment Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild2 = new CFAA_Line_Items__c();
        cfaaChild2.CFAA__c = cfaaParent.Id;
        cfaaChild2.Support_Equipment_Type__c = 'SUV';
        cfaaChild2.Straight_Time_Rate__c =200;
        cfaaChild2.RecordTypeId = equipment;
        childList.add(cfaaChild2);
        Id Pov = Schema.SObjectType.CFAA_Line_Items__c.getRecordTypeInfosByName().get('POV Rate').getRecordTypeId();
        CFAA_Line_Items__c cfaaChild3 = new CFAA_Line_Items__c();
        cfaaChild3.CFAA__c = cfaaParent.Id;
        cfaaChild3.Straight_Time_Rate__c =0.535;
        cfaaChild3.RecordTypeId = Pov;
        childList.add(cfaaChild3);
        Insert childList;
        Account testAccount = MARS_TestHelper.getAccount(true);
        F42__c f42Rec = MARS_TestHelper.getF42(false);
        Incident__c incident = MARS_TestHelper.getIncident(true);
        f42Rec.Incident__c = incident.Id;
        f42Rec.Account__c = testAccount.Id;
        f42Rec.SV_VEHICLE_OWNERSHIP__c ='POV';
        insert f42Rec;
        List<F_42_Personnel_Info__c> personnelList = new List<F_42_Personnel_Info__c>();
        
        F_42_Personnel_Info__c f42Personnel = new F_42_Personnel_Info__c();
        f42Personnel.F_42__c = f42Rec.Id;
        f42Personnel.Start_Date__c = DateTime.Now().AddDays(-3).date();
        f42Personnel.Start_Time__c = '1030';
        f42Personnel.End_Date__c = DateTime.Now().date();
        f42Personnel.End_Time__c = '1645';
        f42Personnel.MACS_ID__c = 'ARC';
        f42Personnel.Rank_Job_Title__c = 'Firefighter/FF-PMedic';
        f42Personnel.SSN__c = '3456';
        F_42_Personnel_Info__c f42Personnel1 = new F_42_Personnel_Info__c();
        f42Personnel1.F_42__c = f42Rec.Id;
        f42Personnel1.Start_Date__c = DateTime.Now().AddDays(-3).date();
        f42Personnel1.Start_Time__c = '1030';
        f42Personnel1.End_Date__c = DateTime.Now().date();
        f42Personnel1.End_Time__c = '1645';
        f42Personnel1.MACS_ID__c = 'ARC';
        f42Personnel1.Rank_Job_Title__c = 'Test';
        f42Personnel1.SSN__c = '4556';
        personnelList.add(f42Personnel1);
        insert personnelList;
        List<String> f42s = new List<String>();
        f42s.add(f42Rec.Id);
        ContentVersion cv = MARS_TestHelper.getContentVersion();
        //Get Content Documents
        Id conDocId = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:cv.Id].ContentDocumentId;
        //Create ContentDocumentLink 
        ContentDocumentLink cdl = New ContentDocumentLink();
        cdl.LinkedEntityId = f42Rec.Id;
        cdl.ContentDocumentId = conDocId;
        cdl.shareType = 'V';
        Insert cdl;
        Account fundingAcc = new Account();
        fundingAcc.Entity_Type__c = 'MARS Paying Entity';
        fundingAcc.Name = 'BIA';
        fundingAcc.Entity_Id__c = 'Test2005';
        insert fundingAcc;
        Funding_Source__c fc = new Funding_Source__c();
        fc.Account__c = fundingAcc.Id;
        fc.Name = 'BIA';
        fc.Active__c = true;
        fc.Applicable_for_App__c = 'MARS';
        insert fc;
        List<Funding_Rule__c> fundingList = new List<Funding_Rule__c>();
        Funding_Rule__c fundingRule = new Funding_Rule__c();
        fundingRule.Rule_Type__c = 'Percentage Basis';    
        fundingRule.Funding_Source_1__c =fc.Id;
        fundingRule.Funding_Source_1_Percent__c = 10;
        fundingList.add(fundingRule);
        Funding_Rule__c fundingRule1 = new Funding_Rule__c();
        fundingRule1.Rule_Type__c = 'Percentage Basis';    
        fundingRule1.Funding_Source_2__c =fc.Id;
        fundingRule1.Funding_Source_2_Percent__c = 20;
        fundingList.add(fundingRule1);
        Funding_Rule__c fundingRule2 = new Funding_Rule__c();
        fundingRule2.Rule_Type__c = 'Percentage Basis';    
        fundingRule2.Funding_Source_3__c =fc.Id;
        fundingRule2.Funding_Source_3_Percent__c = 20;
        fundingList.add(fundingRule2);
        Funding_Rule__c fundingRule3 = new Funding_Rule__c();
        fundingRule3.Rule_Type__c = 'Percentage Basis';    
        fundingRule3.Funding_Source_4__c =fc.Id;
        fundingRule3.Funding_Source_4_Percent__c = 10;
        fundingList.add(fundingRule3);
        Funding_Rule__c fundingRule4 = new Funding_Rule__c();
        fundingRule4.Rule_Type__c = 'Percentage Basis';    
        fundingRule4.Funding_Source_5__c =fc.Id;
        fundingRule4.Funding_Source_5_Percent__c = 50;
        fundingList.add(fundingRule4);
        insert fundingList;
        List<String> expenseClaims = new List<String>();

        test.startTest();//, String fundingRuleId, List<String> expenseClaims
        List<String> result = MARSInvoiceHelper.createInvoiceStaging(incident.Id,null,f42s,fundingRule.Id,null,'Invoice',expenseClaims);
        System.assert(result.size() > 0);
        test.stopTest();
    }
}